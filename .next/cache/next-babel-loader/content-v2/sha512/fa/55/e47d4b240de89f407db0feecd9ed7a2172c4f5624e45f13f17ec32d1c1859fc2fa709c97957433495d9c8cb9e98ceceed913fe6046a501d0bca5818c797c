{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Blind2k\\\\Development\\\\Udemy\\\\Learn React-udemy\\\\316.Next.js\\\\NextJsBasicModal\\\\pages\\\\[meetupId]\\\\index.js\";\nimport { MongoClient } from \"mongodb\";\nimport { Fragment } from \"react\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nconst meetupId = props => {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      image: \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg\",\n      title: \"First Meetup\",\n      address: \"Some Street 5, Some City\",\n      description: \"This is a first meetup\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 10\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 7\n  }, this);\n};\n\nexport default meetupId; // GET THE PATH AKA URL\n\nexport async function getStaticPaths() {\n  const uri = \"mongodb+srv://Zuriel:NgxSFumgpjuV5rb2@cluster0.7loqa.mongodb.net/myFirstDatabase?retryWrites=true&w=majority\";\n  const client = await MongoClient.connect(uri);\n  const database = client.db();\n  const colectionDatabase = database.collection(\"meetups\");\n  const meetups = await colectionDatabase.find({}, {\n    _id: 1\n  }).toArray();\n  console.log(meetups.map(x => x._id.toString()));\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    })) // [\n    //    {\n    //       params: {\n    //          meetupId: \"m1\",\n    //       },\n    //    },\n    //    {\n    //       params: {\n    //          meetupId: \"m2\",\n    //       },\n    //    },\n    // ],\n\n  };\n} // GET THE PROPS FROM THE PATH\n\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId;\n  return {\n    props: {\n      meetupId: {\n        id: meetupId // title: \"Gift\",\n        // address: \"Denemark\",\n        // image: \"http://www.fubiz.net/wp-content/uploads/2020/12/strangernights.jpg\",\n        // description: \"lopes kfsaf kdsalöfad löjöl asdaööljjj k\",\n\n      }\n    },\n    revalidate: 100\n  };\n}","map":{"version":3,"sources":["C:/Users/Blind2k/Development/Udemy/Learn React-udemy/316.Next.js/NextJsBasicModal/pages/[meetupId]/index.js"],"names":["MongoClient","Fragment","MeetupDetail","meetupId","props","getStaticPaths","uri","client","connect","database","db","colectionDatabase","collection","meetups","find","_id","toArray","console","log","map","x","toString","fallback","paths","meetup","params","getStaticProps","context","id","revalidate"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,SAA5B;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,YAAP,MAAyB,uCAAzB;;AAEA,MAAMC,QAAQ,GAAGC,KAAK,IAAI;AACvB,sBACG,QAAC,QAAD;AAAA,2BACG,QAAC,YAAD;AACG,MAAA,KAAK,EAAC,wHADT;AAEG,MAAA,KAAK,EAAC,cAFT;AAGG,MAAA,OAAO,EAAC,0BAHX;AAIG,MAAA,WAAW,EAAC;AAJf;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,UADH;AAUF,CAXD;;AAaA,eAAeD,QAAf,C,CAEA;;AACA,OAAO,eAAeE,cAAf,GAAgC;AACpC,QAAMC,GAAG,GAAG,8GAAZ;AACA,QAAMC,MAAM,GAAG,MAAMP,WAAW,CAACQ,OAAZ,CAAoBF,GAApB,CAArB;AACA,QAAMG,QAAQ,GAAGF,MAAM,CAACG,EAAP,EAAjB;AACA,QAAMC,iBAAiB,GAAGF,QAAQ,CAACG,UAAT,CAAoB,SAApB,CAA1B;AACA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAA3B,EAAuCC,OAAvC,EAAtB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,OAAO,CAACM,GAAR,CAAYC,CAAC,IAAIA,CAAC,CAACL,GAAF,CAAMM,QAAN,EAAjB,CAAZ;AAEA,SAAO;AACJC,IAAAA,QAAQ,EAAE,KADN;AAEJC,IAAAA,KAAK,EAAEV,OAAO,CAACM,GAAR,CAAYK,MAAM,KAAK;AAC3BC,MAAAA,MAAM,EAAE;AAAEtB,QAAAA,QAAQ,EAAEqB,MAAM,CAACT,GAAP,CAAWM,QAAX;AAAZ;AADmB,KAAL,CAAlB,CAFH,CAMJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAjBI,GAAP;AAmBF,C,CACD;;AACA,OAAO,eAAeK,cAAf,CAA8BC,OAA9B,EAAuC;AAC3C,QAAMxB,QAAQ,GAAGwB,OAAO,CAACF,MAAR,CAAetB,QAAhC;AAEA,SAAO;AACJC,IAAAA,KAAK,EAAE;AACJD,MAAAA,QAAQ,EAAE;AACPyB,QAAAA,EAAE,EAAEzB,QADG,CAEP;AACA;AACA;AACA;;AALO;AADN,KADH;AAUJ0B,IAAAA,UAAU,EAAE;AAVR,GAAP;AAYF","sourcesContent":["import { MongoClient } from \"mongodb\";\nimport { Fragment } from \"react\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nconst meetupId = props => {\n   return (\n      <Fragment>\n         <MeetupDetail\n            image=\"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg\"\n            title=\"First Meetup\"\n            address=\"Some Street 5, Some City\"\n            description=\"This is a first meetup\"\n         />\n      </Fragment>\n   );\n};\n\nexport default meetupId;\n\n// GET THE PATH AKA URL\nexport async function getStaticPaths() {\n   const uri = \"mongodb+srv://Zuriel:NgxSFumgpjuV5rb2@cluster0.7loqa.mongodb.net/myFirstDatabase?retryWrites=true&w=majority\";\n   const client = await MongoClient.connect(uri);\n   const database = client.db();\n   const colectionDatabase = database.collection(\"meetups\");\n   const meetups = await colectionDatabase.find({}, { _id: 1 }).toArray();\n   console.log(meetups.map(x => x._id.toString()))\n\n   return {\n      fallback: false,\n      paths: meetups.map(meetup => ({\n         params: { meetupId: meetup._id.toString() },\n      })),\n\n      // [\n      //    {\n      //       params: {\n      //          meetupId: \"m1\",\n      //       },\n      //    },\n      //    {\n      //       params: {\n      //          meetupId: \"m2\",\n      //       },\n      //    },\n      // ],\n   };\n}\n// GET THE PROPS FROM THE PATH\nexport async function getStaticProps(context) {\n   const meetupId = context.params.meetupId;\n\n   return {\n      props: {\n         meetupId: {\n            id: meetupId,\n            // title: \"Gift\",\n            // address: \"Denemark\",\n            // image: \"http://www.fubiz.net/wp-content/uploads/2020/12/strangernights.jpg\",\n            // description: \"lopes kfsaf kdsalöfad löjöl asdaööljjj k\",\n         },\n      },\n      revalidate: 100,\n   };\n}\n"]},"metadata":{},"sourceType":"module"}