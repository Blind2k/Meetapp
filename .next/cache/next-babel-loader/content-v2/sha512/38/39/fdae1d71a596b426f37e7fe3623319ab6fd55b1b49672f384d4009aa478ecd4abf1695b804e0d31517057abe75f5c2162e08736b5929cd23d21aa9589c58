{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Blind2k\\\\Development\\\\Udemy\\\\Learn React-udemy\\\\316.Next.js\\\\NextJsBasicModal\\\\pages\\\\new-meetup\\\\index.js\";\n// our-domain.com/new-meetup\nimport { useRouter } from 'next/router';\nimport NewMeetupForm from '../../components/meetups/NewMeetupForm';\n\nfunction NewMeetupPage() {\n  // const router = useRouter();\n  async function addMeetupHandler(enteredMeetupData) {\n    async function handler(req, res) {\n      if (req.method === 'POST') {\n        const data = req.body;\n        console.log(data);\n        const client = await MongoClient.connect(\"mongodb+srv://Zuriel:XvIuxKDAPrtrbc8t@cluster0.7loqa.mongodb.net/myFirstDatabase?retryWrites=true&w=majority\");\n        const db = client.db();\n        const meetupsCollection = db.collection('meetups');\n        const result = await meetupsCollection.insertOne(data);\n        console.log(result);\n        client.close();\n        res.status(201).json({\n          message: 'Meetup inserted!'\n        });\n      }\n    }\n\n    console.log(enteredMeetupData);\n    const response = await fetch('/api/new-meetup', {\n      method: 'POST',\n      body: JSON.stringify(enteredMeetupData),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const data = await response.json();\n    console.log(data);\n    router.push('/');\n  }\n\n  return /*#__PURE__*/_jsxDEV(NewMeetupForm, {\n    onAddMeetup: addMeetupHandler\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 10\n  }, this);\n}\n\nexport default NewMeetupPage;","map":{"version":3,"sources":["C:/Users/Blind2k/Development/Udemy/Learn React-udemy/316.Next.js/NextJsBasicModal/pages/new-meetup/index.js"],"names":["useRouter","NewMeetupForm","NewMeetupPage","addMeetupHandler","enteredMeetupData","handler","req","res","method","data","body","console","log","client","MongoClient","connect","db","meetupsCollection","collection","result","insertOne","close","status","json","message","response","fetch","JSON","stringify","headers","router","push"],"mappings":";;AAAA;AACA,SAASA,SAAT,QAA0B,aAA1B;AAEA,OAAOC,aAAP,MAA0B,wCAA1B;;AAEA,SAASC,aAAT,GAAyB;AACvB;AAEA,iBAAeC,gBAAf,CAAgCC,iBAAhC,EAAmD;AACjD,mBAAeC,OAAf,CAAuBC,GAAvB,EAA4BC,GAA5B,EAAiC;AAC/B,UAAID,GAAG,CAACE,MAAJ,KAAe,MAAnB,EAA2B;AACxB,cAAMC,IAAI,GAAGH,GAAG,CAACI,IAAjB;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,cAAMI,MAAM,GAAG,MAAMC,WAAW,CAACC,OAAZ,CAClB,8GADkB,CAArB;AAIF,cAAMC,EAAE,GAAGH,MAAM,CAACG,EAAP,EAAX;AAEA,cAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,cAAMC,MAAM,GAAG,MAAMF,iBAAiB,CAACG,SAAlB,CAA4BX,IAA5B,CAArB;AAEAE,QAAAA,OAAO,CAACC,GAAR,CAAYO,MAAZ;AAEAN,QAAAA,MAAM,CAACQ,KAAP;AAEAd,QAAAA,GAAG,CAACe,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,UAAAA,OAAO,EAAE;AAAX,SAArB;AACD;AACF;;AACAb,IAAAA,OAAO,CAACC,GAAR,CAAYR,iBAAZ;AACA,UAAMqB,QAAQ,GAAG,MAAMC,KAAK,CAAC,iBAAD,EAAoB;AAC9ClB,MAAAA,MAAM,EAAE,MADsC;AAE9CE,MAAAA,IAAI,EAAEiB,IAAI,CAACC,SAAL,CAAexB,iBAAf,CAFwC;AAG9CyB,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AAHqC,KAApB,CAA5B;AAQA,UAAMpB,IAAI,GAAG,MAAMgB,QAAQ,CAACF,IAAT,EAAnB;AAEAZ,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AAEAqB,IAAAA,MAAM,CAACC,IAAP,CAAY,GAAZ;AACD;;AAED,sBAAO,QAAC,aAAD;AAAe,IAAA,WAAW,EAAE5B;AAA5B;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;AAED,eAAeD,aAAf","sourcesContent":["// our-domain.com/new-meetup\nimport { useRouter } from 'next/router';\n\nimport NewMeetupForm from '../../components/meetups/NewMeetupForm';\n\nfunction NewMeetupPage() {\n  // const router = useRouter();\n\n  async function addMeetupHandler(enteredMeetupData) {\n    async function handler(req, res) {\n      if (req.method === 'POST') {\n         const data = req.body;\n         console.log(data);\n         const client = await MongoClient.connect(\n            \"mongodb+srv://Zuriel:XvIuxKDAPrtrbc8t@cluster0.7loqa.mongodb.net/myFirstDatabase?retryWrites=true&w=majority\"\n            );\n   \n       const db = client.db();\n   \n       const meetupsCollection = db.collection('meetups');\n   \n       const result = await meetupsCollection.insertOne(data);\n   \n       console.log(result);\n   \n       client.close();\n   \n       res.status(201).json({ message: 'Meetup inserted!' });\n     }\n   }\n    console.log(enteredMeetupData);\n    const response = await fetch('/api/new-meetup', {\n      method: 'POST',\n      body: JSON.stringify(enteredMeetupData),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n\n    const data = await response.json();\n\n    console.log(data);\n\n    router.push('/');\n  }\n\n  return <NewMeetupForm onAddMeetup={addMeetupHandler} />\n}\n\nexport default NewMeetupPage;"]},"metadata":{},"sourceType":"module"}